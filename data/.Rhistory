legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/scandinavia.jpg", width = 6, height = 4)
#Mediterranean
plot_data <- data.frame(time=proxy$time, proxy=proxy$mediterranean, model=model$mediterranean, diff=diff$Mediterranean)
plot <- ggplot()+
geom_line(data=plot_data,aes(time, proxy, colour = "Anomaly in Proxy Data"))+
geom_line(data=plot_data,aes(time, model, colour = "Anomaly in Model Data"))+
geom_line(data=plot_data,aes(time, diff+20, colour = "Model - Proxy"))+
scale_colour_manual(values = c(
'Anomaly in Proxy Data' = 'blue',
'Anomaly in Model Data' = 'red',
'Model - Proxy' = 'purple'
))+
geom_hline(yintercept = 0, size = 0.6, linetype='dotted') +
geom_hline(yintercept = 20, size = 0.6, linetype='dotted', colour="purple") +
scale_y_continuous(name = expression("Temperature Anomaly (°C)"), limits = c(-25, 40),
sec.axis = sec_axis(~.-20, name = "Anomaly Differences (°C)"))+
labs(y = "Anomaly",
x = "Time (Years BP)",
colour = 'Legend') +
ggtitle("Temperature Anomaly at Mediterranean Sea", "Proxy Metadata and Model Outputs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line.x = element_line(colour = "black"),
axis.title.y=element_text(size=10),
panel.border = element_rect(colour = "black", fill=NA),
axis.line= element_line(colour = "black"),
axis.title.x=element_text(size=10),
legend.justification = c(0, 0),
legend.position = "top",
legend.spacing.x = unit(10, 'pt'),
legend.text = element_text(margin = margin(t = 3), size=rel(0.83)),
legend.background = element_rect(colour = NA),
legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/mediterranean.jpg", width = 6, height = 4)
#south atlantic
plot_data <- data.frame(time=proxy$time, proxy=proxy$s_atlantic, model=model$s_atlantic, diff=diff$South_Atlantic)
plot <- ggplot()+
geom_line(data=plot_data,aes(time, proxy, colour = "Anomaly in Proxy Data"))+
geom_line(data=plot_data,aes(time, model, colour = "Anomaly in Model Data"))+
geom_line(data=plot_data,aes(time, diff+20, colour = "Model - Proxy"))+
scale_colour_manual(values = c(
'Anomaly in Proxy Data' = 'blue',
'Anomaly in Model Data' = 'red',
'Model - Proxy' = 'purple'
))+
geom_hline(yintercept = 0, size = 0.6, linetype='dotted') +
geom_hline(yintercept = 20, size = 0.6, linetype='dotted', colour="purple") +
scale_y_continuous(name = expression("Temperature Anomaly (°C)"), limits = c(-25, 40),
sec.axis = sec_axis(~.-20, name = "Anomaly Differences (°C)"))+
labs(y = "Anomaly",
x = "Time (Years BP)",
colour = 'Legend') +
ggtitle("Temperature Anomaly at South Atlantic", "Proxy Metadata and Model Outputs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line.x = element_line(colour = "black"),
axis.title.y=element_text(size=10),
panel.border = element_rect(colour = "black", fill=NA),
axis.line= element_line(colour = "black"),
axis.title.x=element_text(size=10),
legend.justification = c(0, 0),
legend.position = "top",
legend.spacing.x = unit(10, 'pt'),
legend.text = element_text(margin = margin(t = 3), size=rel(0.83)),
legend.background = element_rect(colour = NA),
legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/south_atlantic.jpg", width = 6, height = 4)
#sw africa
plot_data <- data.frame(time=proxy$time, proxy=proxy$w_africa, model=model$w_africa, diff=diff$W_Africa_coast)
plot <- ggplot()+
geom_line(data=plot_data,aes(time, proxy, colour = "Anomaly in Proxy Data"))+
geom_line(data=plot_data,aes(time, model, colour = "Anomaly in Model Data"))+
geom_line(data=plot_data,aes(time, diff+20, colour = "Model - Proxy"))+
scale_colour_manual(values = c(
'Anomaly in Proxy Data' = 'blue',
'Anomaly in Model Data' = 'red',
'Model - Proxy' = 'purple'
))+
geom_hline(yintercept = 0, size = 0.6, linetype='dotted') +
geom_hline(yintercept = 20, size = 0.6, linetype='dotted', colour="purple") +
scale_y_continuous(name = expression("Temperature Anomaly (°C)"), limits = c(-25, 40),
sec.axis = sec_axis(~.-20, name = "Anomaly Differences (°C)"))+
labs(y = "Anomaly",
x = "Time (Years BP)",
colour = 'Legend') +
ggtitle("Temperature Anomaly at Tropical Southwestern African Coast", "Proxy Metadata and Model Outputs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line.x = element_line(colour = "black"),
axis.title.y=element_text(size=10),
panel.border = element_rect(colour = "black", fill=NA),
axis.line= element_line(colour = "black"),
axis.title.x=element_text(size=10),
legend.justification = c(0, 0),
legend.position = "top",
legend.spacing.x = unit(10, 'pt'),
legend.text = element_text(margin = margin(t = 3), size=rel(0.83)),
legend.background = element_rect(colour = NA),
legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/sw_africa.jpg", width = 6, height = 4)
#china
plot_data <- data.frame(time=proxy$time, proxy=proxy$china, model=model$china, diff=diff$China)
plot <- ggplot()+
geom_line(data=plot_data,aes(time, proxy, colour = "Anomaly in Proxy Data"))+
geom_line(data=plot_data,aes(time, model, colour = "Anomaly in Model Data"))+
geom_line(data=plot_data,aes(time, diff+20, colour = "Model - Proxy"))+
scale_colour_manual(values = c(
'Anomaly in Proxy Data' = 'blue',
'Anomaly in Model Data' = 'red',
'Model - Proxy' = 'purple'
))+
geom_hline(yintercept = 0, size = 0.6, linetype='dotted') +
geom_hline(yintercept = 20, size = 0.6, linetype='dotted', colour="purple") +
scale_y_continuous(name = expression("Temperature Anomaly (°C)"), limits = c(-25, 40),
sec.axis = sec_axis(~.-20, name = "Anomaly Differences (°C)"))+
labs(y = "Anomaly",
x = "Time (Years BP)",
colour = 'Legend') +
ggtitle("Temperature Anomaly at North-Central China", "Proxy Metadata and Model Outputs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line.x = element_line(colour = "black"),
axis.title.y=element_text(size=10),
panel.border = element_rect(colour = "black", fill=NA),
axis.line= element_line(colour = "black"),
axis.title.x=element_text(size=10),
legend.justification = c(0, 0),
legend.position = "top",
legend.spacing.x = unit(10, 'pt'),
legend.text = element_text(margin = margin(t = 3), size=rel(0.83)),
legend.background = element_rect(colour = NA),
legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/china.jpg", width = 6, height = 4)
#indonesia
plot_data <- data.frame(time=proxy$time, proxy=proxy$indonesia, model=model$indonesia, diff=diff$Indonesia)
plot <- ggplot()+
geom_line(data=plot_data,aes(time, proxy, colour = "Anomaly in Proxy Data"))+
geom_line(data=plot_data,aes(time, model, colour = "Anomaly in Model Data"))+
geom_line(data=plot_data,aes(time, diff+20, colour = "Model - Proxy"))+
scale_colour_manual(values = c(
'Anomaly in Proxy Data' = 'blue',
'Anomaly in Model Data' = 'red',
'Model - Proxy' = 'purple'
))+
geom_hline(yintercept = 0, size = 0.6, linetype='dotted') +
geom_hline(yintercept = 20, size = 0.6, linetype='dotted', colour="purple") +
scale_y_continuous(name = expression("Temperature Anomaly (°C)"), limits = c(-25, 40),
sec.axis = sec_axis(~.-20, name = "Anomaly Differences (°C)"))+
labs(y = "Anomaly",
x = "Time (Years BP)",
colour = 'Legend') +
ggtitle("Temperature Anomaly at Indonesia", "Proxy Metadata and Model Outputs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line.x = element_line(colour = "black"),
axis.title.y=element_text(size=10),
panel.border = element_rect(colour = "black", fill=NA),
axis.line= element_line(colour = "black"),
axis.title.x=element_text(size=10),
legend.justification = c(0, 0),
legend.position = "top",
legend.spacing.x = unit(10, 'pt'),
legend.text = element_text(margin = margin(t = 3), size=rel(0.83)),
legend.background = element_rect(colour = NA),
legend.key = element_rect(colour = "white", fill = NA),
legend.title = element_blank()
) +
scale_x_reverse(limits = c(22000, 100), breaks = scales::pretty_breaks(n = 10))
plot
ggsave("../img/regional_plots/indonesia.jpg", width = 6, height = 4)
# Set working directory to the source folder
model_anomaly <- read_csv("Feng_model_anomaly.csv")
model_anomaly <- model_anomaly[-1]
raw_data <- read_csv("proxy_anomaly.csv")
raw_data <- read_csv("raw_data.csv")
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
View(raw_data)
model_weighted_restul <- 0
for(i in 6:225){
total_area <- 0
model_total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
View(result)
for(i in 6:225){
total_area <- 0
model_total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
View(result)
raw_data <- read_csv("raw_data.csv")
result <- data.frame(matrix(vector(), 221, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "average", "st_error"))))
for(i in 6:226){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
weighted_result <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
}
anomaly_result <- sum_anomaly/total_area
result$time[i-5] <- i-6
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$average[i-5] <- anomaly_result
for(x in 1:nrow(working)){
working$weighted[x] <- as.numeric(working$raw[x]) * (working$area[x]/total_area)
if(working$weighted[x] == 0){
working$weighted[x]<- NA
}
}
weighted_result <- sd(working$weight, na.rm = TRUE)
result$st_error[i-5] <- weighted_result
cat("Processing t", i-6, "\n")
}
# Set working directory to the source folder
model_anomaly <- read_csv("Feng_model_anomaly.csv")
model_anomaly <- model_anomaly[-1]
raw_data <- read_csv("raw_data.csv")
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
model_total_area <- model_total_area + model_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
model_total_area <- model_total_area + model_anomaly$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
for(i in 1:nrow(result)){
result$time_plot[i] <- result$time[i] * 100
result$proxy_average_plot[i] <- as.numeric(result$proxy_average[i])
result$model_average_plot[i] <- as.numeric(result$model_average[i])
}
plot_data <- data.frame(Years = result$time_plot, Model = result$model_average_plot, Proxy = result$proxy_average_plot)
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8 ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
raw_data <- read_csv("proxy_anomaly.csv")
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
model_total_area <- model_total_area + model_anomaly$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
# Set working directory to the source folder
model_anomaly <- read_csv("Feng_model_anomaly.csv")
model_anomaly <- model_anomaly[-1]
View(model_anomaly)
raw_data <- read_csv("proxy_anomaly.csv")
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
model_total_area <- model_total_area + model_anomaly$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
for(i in 1:nrow(result)){
result$time_plot[i] <- result$time[i] * 100
result$proxy_average_plot[i] <- as.numeric(result$proxy_average[i])
result$model_average_plot[i] <- as.numeric(result$model_average[i])
}
plot_data <- data.frame(Years = result$time_plot, Model = result$model_average_plot, Proxy = result$proxy_average_plot)
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8 ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
