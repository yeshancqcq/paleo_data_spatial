temp=temp[-1]
df_ts[,toString(time)] <- temp
cat("finishing ", time,"; ")
View(df_ts)
warnings()
View(temp)
df_ts <- data.frame(pagenumber=1:2592, pagename="")
# Looping through the csv file (output from Panoply)
temp <- array()
time <- 22000
for(i in 1:36){
if(is.na(TS[i,1])==0){
for(col in 1:72){
temp <- c(temp,TS[row,col])
}
}
}
temp=temp[-1]
df_ts[,toString(time)] <- temp
View(df_ts)
df_ts <- data.frame(pagenumber=1:2592, pagename="")
# Looping through the csv file (output from Panoply)
temp <- array()
time <- 22000
for(i in 1:36){
if(is.na(TS[i,1])==0){
for(col in 1:72){
temp <- c(temp,TS[row,col])
}
}
}
temp=temp[-1]
df_ts$new <- temp
View(df_ts)
colnames(df_ts)[3] = new_name
colnames(df_ts)[3] = toString(time)
colnames(df_ts)[-1] = "toString(time) "
colnames(df_ts)[ncol(df_ts)] = "toString(time) "
colnames(df_ts)[ncol(df_ts)] = "toString(time3) "
df_ts <- data.frame(pagenumber=1:2592, pagename="")
# Looping through the csv file (output from Panoply)
temp <- array()
time <- 22000
for (row in 1:nrow(TS)){
if(is.na(TS[row,1])==0){
for(col in 1:72){
temp <- c(temp,TS[row,col])
}
} else{
temp=temp[-1]
df_ts$new <- temp
colnames(df_ts)[ncol(df_ts)] = toString(time)
cat("finishing ", time,"; ")
time <- time - 100
temp <- array()
}
}
temp=temp[-1]
df_ts$new <- temp
colnames(df_ts)[ncol(df_ts)] = toString(time)
cat("finishing ", time,"; ")
write.csv(df, file = "Feng_model_data_new.csv")
write.csv(df, file = "Feng_model.csv")
View(df)
View(df_ts)
write.csv(df_ts, file = "Feng_model_new.csv")
df_ts <- data.frame(pagenumber=1:2592, pagename="")
# Looping through the csv file (output from Panoply)
temp <- array()
time <- 22000
for (row in 1:nrow(TS)){
if(is.na(TS[row,1])==0){
for(col in 1:72){
temp <- c(temp,TS[row,col])
}
} else{
temp=temp[-1]
df_ts$new <- temp
df_ts$new <- vapply(df_ts$new, paste, collapse = ", ", character(1L))
colnames(df_ts)[ncol(df_ts)] = toString(time)
cat("finishing ", time,"; ")
time <- time - 100
temp <- array()
}
}
# Adding the last column t = 100 ka
temp=temp[-1]
df_ts$new <- temp
df_ts$new <- vapply(df_ts$new, paste, collapse = ", ", character(1L))
colnames(df_ts)[ncol(df_ts)] = toString(time)
cat("finishing ", time,"; ")
write.csv(df_ts, file = "Feng_model_new.csv")
model_data <- read_csv("Feng_model_new.csv")
View(model_data)
df <- data.frame(FID=1:nrow(model_data), area=model_data$area,weight=model_data$a_weight,PageName=model_data$PageName, a_base=NA)
for(row in 1:nrow(model_data)){
# In the raw data: t8000 is the 85th column and t12000 is the 125th column
sum <- 0
count <- 0
for(col in 85:125){
sum <- sum + model_data[row,col]
count <- count + 1
}
mean <- sum/count
df$a_base[row] <- mean
cat("Processing row ", row, " of 2592; ")
}
df$a_base <- vapply( df$a_base, paste, collapse = ", ", character(1L))
output_df <- model_data
View(output_df)
for(row in 1:nrow(output_df)){
for(col in 6:ncol(output_df))
output_df[row,col]<-model_data[row,col] - df$a_base[row]
cat("Processing row ", row, " of 2592; ")
}
for(row in 1:nrow(output_df)){
for(col in 6:ncol(output_df)){
output_df[row,col]<-model_data[row,col] - df$a_base[row]
cat("Processing row ", row, " of 2592; ")
}
}
for(row in 1:nrow(model_data)){
# In the raw data: t8000 is the 85th column and t12000 is the 125th column
sum <- 0
count <- 0
for(col in 85:125){
sum <- sum + model_data[row,col]
count <- count + 1
}
mean <- sum/count
df$a_base[row] <- mean
cat("Processing row ", row, " of 2592; ")
}
output_df <- model_data
for(row in 1:nrow(output_df)){
for(col in 6:ncol(output_df)){
output_df[row,col]<-model_data[row,col] - df$a_base[row]
cat("Processing row ", row, " of 2592; ")
}
}
View(output_df)
write.csv(output_df, file = "Feng_model_anomaly.csv")
library(readr)
model_anomaly <- read_csv("Feng_model_anomaly.csv")
View(model_anomaly)
raw_data <- read_csv("raw_data.csv")
result <- data.frame(matrix(vector(), 221, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "average", "st_error"))))
View(result)
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "average", "st_error"))))
raw_data <- read_csv("proxy_anomaly.csv")
View(model_anomaly)
model_anomaly <- model_anomaly[-1]
View(model_anomaly)
View(raw_data)
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "proxy_st_error", "model_average", "model_st_error"))))
result <- data.frame(matrix(vector(), 220, 7, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "proxy_st_error", "model_average", "model_st_error"))))
result <- data.frame(matrix(vector(), 220, 7, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "proxy_st_error", "model_total_area","model_average", "model_st_error"))))
result <- data.frame(matrix(vector(), 220, 8, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "proxy_st_error", "model_total_area","model_average", "model_st_error"))))
total_area <- total_area + raw_data$area[j]
for(i in 6:225){
total_area <- 0
model_total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_total_area <- model_total_area + raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-6
result$total_area[i-5] <- total_area
result$model_total_area <- model_total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
for(x in 1:nrow(working)){
working$weighted[x] <- as.numeric(working$raw[x]) * (working$area[x]/total_area)
if(working$weighted[x] == 0){
working$weighted[x]<- NA
}
}
weighted_result <- sd(working$weight, na.rm = TRUE)
result$proxy_st_error[i-5] <- weighted_result
cat("Processing t", i-6, "\n")
}
View(working)
View(result)
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
}
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-6
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
View(result)
for(i in 1:nrow(result)){
result$time[i] = result$time[i]+1
}
View(result)
View(result)
for(i in 1:nrow(result)){
result$time_plot[i] <- result$time[i] * 100
result$proxy_average_plot[i] <- as.numeric(result$proxy_average[i])
result$model_average_plot[i] <- as.numeric(result$model_average[i])
}
View(result)
plot_data <- data.frame(Years = result$time_plot, Model = result$model_average_plot, Proxy = result$proxy_average_plot)
View(plot_data)
write.csv(plot_data,"average_data_model.csv")
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Legend") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
library(ggplot2)
library(stats)
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Legend") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Legend") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Legend") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key.height = element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Legend") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8 ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
for(i in 6:225){
total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
}
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
for(i in 1:nrow(result)){
result$time_plot[i] <- result$time[i] * 100
result$proxy_average_plot[i] <- as.numeric(result$proxy_average[i])
result$model_average_plot[i] <- as.numeric(result$model_average[i])
}
plot_data <- data.frame(Years = result$time_plot, Model = result$model_average_plot, Proxy = result$proxy_average_plot)
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8 ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
model_total_area <- 0
result <- data.frame(matrix(vector(), 220, 5, dimnames=list(c(), c("time", "total_area", "total_anomaly_area", "proxy_average", "model_average"))))
for(i in 6:225){
total_area <- 0
model_total_area <- 0
sum_anomaly <- 0
this_anomaly <- 0
model_sum_anomaly <- 0
model_this_anomaly <- 0
weighted_result <- 0
model_weighted_restul <- 0
working <- data.frame(matrix(vector(), nrow(raw_data), 4, dimnames=list(c(),c("grid","area","raw","weighted"))))
for(j in 1:nrow(raw_data)){
working$grid[j] <- raw_data$PageName[j]
working$raw[j] <- raw_data[j,i]
working$area[j] <- raw_data$area[j]
if(raw_data[j,i]!=0){
this_anomaly <- raw_data$area[j] * raw_data[j,i]
total_area <- total_area + raw_data$area[j]
sum_anomaly <- sum_anomaly + this_anomaly
model_this_anomaly <- model_anomaly[j,i]*raw_data$area[j]
model_sum_anomaly <- model_sum_anomaly + model_this_anomaly
model_total_area <- model_total_area + raw_data$area[j]
}
}
anomaly_result <- sum_anomaly/total_area
model_anomaly_result <- model_sum_anomaly/model_total_area
result$time[i-5] <- i-5
result$total_area[i-5] <- total_area
result$total_anomaly_area[i-5] <- sum_anomaly
result$proxy_average[i-5] <- anomaly_result
result$model_average[i-5] <- model_anomaly_result
cat("Processing t", i-6, "\n")
}
for(i in 1:nrow(result)){
result$time_plot[i] <- result$time[i] * 100
result$proxy_average_plot[i] <- as.numeric(result$proxy_average[i])
result$model_average_plot[i] <- as.numeric(result$model_average[i])
}
plot_data <- data.frame(Years = result$time_plot, Model = result$model_average_plot, Proxy = result$proxy_average_plot)
ave <- ggplot()+
geom_line(data=plot_data, aes(x=Years, y=Proxy, colour = "Proxy Data"), size = 0.5)+
geom_line(data=plot_data, aes(x=Years, y=Model, colour = "Model Data"), size = 0.5)+
labs(y = "Anomaly (Celsius)",
x = "Time (Years BP)",
colour = "Data Type") +
ggtitle("Global Avereage Temperature Anomaly, Area Weighted","Anomaly reference: the average temperature from 8 ka to 12 ka")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.title.x=element_text(size=10),
axis.title.y=element_text(size=10),
legend.key= element_rect(colour="white", fill=NA)
) +
scale_colour_manual(values=c(
"Proxy Data" = "blue",
"Model Data" = "red"
))+
scale_x_reverse(limits = c(22000, 0))+
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1))+
geom_hline(yintercept=0, linetype="dashed", color = "black")
ave
write.csv(plot_data,"average_data_model_proxygrids.csv")
